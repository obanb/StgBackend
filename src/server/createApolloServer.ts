import {GraphQLSchema} from 'graphql';
import {ApolloServer, Config, PlaygroundConfig} from 'apollo-server-express';
import {ContextFunction, FileUploadOptions} from 'apollo-server-core';

export interface CreateApolloServerConfig {
    readonly schema: GraphQLSchema;
    readonly debug: boolean;
    readonly createContextFn: ContextFunction<any>;
}

export const createApolloServer = ({schema, debug, createContextFn}: CreateApolloServerConfig): ApolloServer => {
    const playground: PlaygroundConfig = {
        settings: {
            'editor.theme': 'light',
        },
    };

    const apolloServerConfig: Config = {
        schema,
        // apollo perf cloude
        engine: false,
        playground,
        uploads: {
            maxFileSize: 10000000,
        } as FileUploadOptions,
        introspection: true,
        subscriptions: false,

        tracing: debug,
        debug,
        // TODO - account context
        // formatError: handleGraphQLError,

        context: async (args: any) => {
            const {req, res} = args;
            const uuidNo = req.headers.uuidNo;
            const accountContext = {user: '1'};

            const ctx: any = {
                // generated by apollo
                httpRequest: req,
                httpResponse: res,

                // per-request generated
                uuidNo,
                accountContext,
            };
            return ctx;
        },
        // context: createContextFn,
    };
    return new ApolloServer(apolloServerConfig);
};
